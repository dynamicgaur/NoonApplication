<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="anuvrata-pc" name="Sample Try" tests="5" failures="0" timestamp="30 Apr 2020 20:39:29 GMT" time="0.202" errors="0">
  <testcase name="@BeforeMethod initialise" time="0.0" classname="TestFiles.LoginTest">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: C:\Users\Anuvrata\Downloads\UI_Automation\NoonApplication\NoonApplication\src\drivers\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\Anuvrata\Downloads\UI_Automation\NoonApplication\NoonApplication\src\drivers\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at TestBase.BaseMain.browserInitialise(BaseMain.java:114)
	at TestFiles.LoginTest.initialise(LoginTest.java:22)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialise -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod initialise" time="0.0" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialise -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod initialise" time="0.0" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialise -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod initialise" time="0.0" classname="TestFiles.HomeTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialise -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestFiles.HomeTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod initialise" time="0.0" classname="TestFiles.HomeTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialise -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestFiles.HomeTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="loginLogo" time="0.0" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- loginLogo -->
  <testcase name="verifyForgotPassword" time="0.0" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- verifyForgotPassword -->
  <testcase name="loginApplication" time="0.015" classname="TestFiles.LoginTest">
    <skipped/>
  </testcase> <!-- loginApplication -->
  <testcase name="verifyHome" time="0.016" classname="TestFiles.HomeTest">
    <skipped/>
  </testcase> <!-- verifyHome -->
  <testcase name="search" time="0.016" classname="TestFiles.HomeTest">
    <skipped/>
  </testcase> <!-- search -->
</testsuite> <!-- Sample Try -->
